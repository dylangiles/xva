{
  "name": "xva",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_item"
      }
    },
    "_item": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_primary_expression"
        }
      ]
    },
    "_primary_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "literal"
        }
      ]
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "integer_literal"
        },
        {
          "type": "SYMBOL",
          "name": "character_literal"
        },
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "boolean_literal"
        }
      ]
    },
    "integer_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "decimal_literal"
            },
            {
              "type": "SYMBOL",
              "name": "binary_literal"
            },
            {
              "type": "SYMBOL",
              "name": "octal_literal"
            },
            {
              "type": "SYMBOL",
              "name": "hex_literal"
            }
          ]
        }
      ]
    },
    "decimal_literal": {
      "type": "PATTERN",
      "value": "[0-9]([0-9]|_)*"
    },
    "binary_literal": {
      "type": "PATTERN",
      "value": "0b([0-1]|_)*[0-1]([0-1]|_)*"
    },
    "octal_literal": {
      "type": "PATTERN",
      "value": "0o([0-7]|_)*[0-7]([0-7]|_)*"
    },
    "hex_literal": {
      "type": "PATTERN",
      "value": "0x([0-9a-fA-F]|_)*[0-9a-fA-F]([0-9a-fA-F]|_)*"
    },
    "character_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "PATTERN",
              "value": "[^\\'\\\\(\\\\n)(\\\\r)(\\\\t)]"
            },
            {
              "type": "SYMBOL",
              "name": "quote_escape"
            },
            {
              "type": "SYMBOL",
              "name": "ascii_escape"
            },
            {
              "type": "SYMBOL",
              "name": "unicode_escape"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "quote_escape": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "\\'"
        },
        {
          "type": "STRING",
          "value": "\\\""
        }
      ]
    },
    "ascii_escape": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\\x"
            },
            {
              "type": "PATTERN",
              "value": "[0-7]"
            },
            {
              "type": "PATTERN",
              "value": "[0-9a-fA-f]"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "\\n"
        },
        {
          "type": "STRING",
          "value": "\\r"
        },
        {
          "type": "STRING",
          "value": "\\t"
        },
        {
          "type": "STRING",
          "value": "\\\\"
        },
        {
          "type": "STRING",
          "value": "\\0"
        }
      ]
    },
    "unicode_escape": {
      "type": "PATTERN",
      "value": "\\\\u([0-9a-fA-F]|_*){1,6}"
    },
    "string_literal": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^\\\"\\\\\\n]"
              },
              {
                "type": "SYMBOL",
                "name": "_quote_escape"
              },
              {
                "type": "SYMBOL",
                "name": "_ascii_escape"
              },
              {
                "type": "SYMBOL",
                "name": "_unicode_escape"
              },
              {
                "type": "SYMBOL",
                "name": "_string_continuation"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "_quote_escape": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "\\'"
        },
        {
          "type": "STRING",
          "value": "\\\""
        }
      ]
    },
    "_ascii_escape": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "\\x"
            },
            {
              "type": "PATTERN",
              "value": "[0-7]"
            },
            {
              "type": "PATTERN",
              "value": "[0-9a-fA-f]"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "\\n"
        },
        {
          "type": "STRING",
          "value": "\\r"
        },
        {
          "type": "STRING",
          "value": "\\t"
        },
        {
          "type": "STRING",
          "value": "\\\\"
        },
        {
          "type": "STRING",
          "value": "\\0"
        }
      ]
    },
    "_unicode_escape": {
      "type": "PATTERN",
      "value": "\\\\u([0-9a-fA-F]|_*){1,6}"
    },
    "_string_continuation": {
      "type": "PATTERN",
      "value": "\\\\\\n"
    },
    "boolean_literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

